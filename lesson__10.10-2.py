# Реализуйте функцию grouper(), которая принимает два аргумента в следующем порядке:
# iterable — итерируемый объект
# n — натуральное число
# Функция должна возвращать итератор, генерирующий последовательность, элементами которой
# являются объединенные в кортежи по n элементов соседние элементы итерируемого объекта iterable.
# Если у элемента не достаточно соседей, то ими становится значение None.
# Примечание 1. Элементы итерируемого объекта в возвращаемом функцией итераторе должны располагаться
# в своем исходном порядке.


from itertools import tee, zip_longest, islice, repeat

def grouper(iterable, n):
    b = repeat(iter(iterable), n)
    yield from zip_longest(*b)


# ТЕСТ__1              (1, 2) (3, 4) (5, 6)
numbers = [1, 2, 3, 4, 5, 6]
print(*grouper(numbers, 2))

# ТЕСТ__2              (1, 2, 3) (4, 5, 6) (7, None, None)
iterator = iter([1, 2, 3, 4, 5, 6, 7])
print(*grouper(iterator, 3))

# ТЕСТ__3              (1, 2, 3, None, None)
iterator = iter([1, 2, 3])
print(*grouper(iterator, 5))


